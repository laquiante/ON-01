---
# MOTD
- hosts: cumulus-5x-nodes
  name: rocket turtle forever
  become: yes
  gather_facts: no
  tasks:
    - name: copy motd 
      copy:
        src: /home/cumulus/ON-01/inventory/files/motd.sh
        dest: /etc/profile.d
        
- hosts: leaf11 leaf12 leaf21 leaf22 spine13 spine14 spine23 spine24
  name: startup L3-Fabric
  become: yes
  gather_facts: no
  tasks:
    - name: unit-40 
      copy:
        src: /home/cumulus/ON-01/unit-40/{{ inventory_hostname }}.yaml
        dest: /etc/nvue.d/startup.yaml
    # aktivieren
    - name: activate changes 
      shell: nv config apply startup -y
        
# ENI, Daemons und FRR    
- hosts: cumulus-4x-nodes
  name: e/n/i daemons und frr
  become: yes
  gather_facts: no
  tasks:
        
    - name: Daemons
      copy:
        src: /home/cumulus/ON-01/unit-40/daemons
        dest: /etc/frr/daemons
        
    # aktivieren
    - name: activate changes for all cumulus nodes
      shell: systemctl restart frr
      
    - name: Interface
      copy:
        src: /home/cumulus/ON-01/unit-40/{{ inventory_hostname }}.eni
        dest: /etc/network/interfaces
        
    # aktivieren
    - name: activate changes for all cumulus nodes
      shell: ifreload -a
      
    - name: FRR config
      copy:
        src: /home/cumulus/ON-01/unit-40/{{ inventory_hostname }}.frr
        dest: /etc/network/interfaces
    # aktivieren
    - name: activate changes for all cumulus nodes
      shell: systemctl reload frr
       
########################################################################       
       
- hosts: host
  name: netplan
  become: yes
  gather_facts: no
  tasks:
    - name: cloud file entfernen
      ansible.builtin.file:
        path: /etc/netplan/50-cloud-init.yaml
        state: absent
        
    - name: config file entfernen
      ansible.builtin.file:
        path: /etc/netplan/config.yaml
        state: absent
        
    - name: copy netplan yaml
      copy:
        src: /home/cumulus/ON-01/unit-40/{{ inventory_hostname }}.yaml
        dest: /etc/netplan/config.yaml
        
    - name: apply netplan yaml
      shell: netplan apply
      
    - name: apt
 #     ansible.builtin.apt_key:
 #       url: https://deb.frrouting.org/frr/keys.asc
 #       state: present
 #   - name: get os
 #     shell: /lsb_release -s -c
 #     register: lsb
 #   - debug: msg={{ lsb }}
 #    shell: curl -s https://deb.frrouting.org/frr/keys.asc | sudo apt-key add -

      ansible.builtin.apt_key:
        url: https://deb.frrouting.org/frr/keys.asc
        state: present
      become: true
      register: add_repository_key
      ignore_errors: true
      
    - name: Debian | Ensure curl & gnupg is present (on older systems without SNI).
      ansible.builtin.package:
        name:
          - curl
          - gnupg
        state: present
      become: true
      when: add_repository_key is failed

    - name: Debian | Add FRR apt key (alternative for older systems without SNI).
      ansible.builtin.shell:
        cmd: |
          set -o pipefail
          curl -sSL https://deb.frrouting.org/frr/keys.asc | sudo apt-key add -
      args:
        executable: "/bin/bash"
      become: true
      changed_when: false
      when: add_repository_key is failed     
      
    - name: Debian | Ensure apt-transport-https is present to enable https repositories
      ansible.builtin.package:
        name: apt-transport-https
        state: present
      become: true

    - name: Debian | Install FRR apt repo
      ansible.builtin.apt_repository:
        repo: "{{ frr_apt_repository }}"
        state: present
        mode: "0644"     
    
 #   - name: Debian | Install FRR
 #     ansible.builtin.package:
 #       name: "{{ frr_packages }}"
 #       state: latest  # noqa package-latest
 #       become: true    
    
    - name: Update repositories cache and install frr
      ansible.builtin.apt:
        name: frr
        update_cache: yes    
        
    - name: Update repositories cache and install frr
      ansible.builtin.apt:
        name: frr-pythontools
        update_cache: yes   
        
    - name: copy daemons
      copy:
        src: /home/cumulus/ON-01/unit-40/daemons
        dest: /etc/frr/daemons
        
    - name: copy frr
      copy:
        src: /home/cumulus/ON-01/unit-40/{{ inventory_hostname }}.frr
        dest: /etc/frr/frr.conf
        
    - name: systemctl
      ansible.builtin.systemd:
        state: restarted
        name: frr
      
    # Pr√ºfen ob BGP Routen liefert
    - name: Check interface 2
      shell: '/sbin/ip -br -4 a'
      ignore_errors: yes
      register: result
    - debug: msg={{ result.stdout }}
